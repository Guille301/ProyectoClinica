@model DTOs.Evolucion.EvolucionPacienteDto

@{
    ViewData["Title"] = "GetEvoluciones";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/style.css" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap"
          rel="stylesheet" />
    <title>@ViewData["Title"]</title>
    <!-- Estilos específicos para esta vista -->
    <style>
        /* Estilos para los botones */
        .btn-edit {
            color: black;
            padding: 1rem;
            border: solid 1px black;
            border-radius: 5px; /* Usamos un valor fijo en lugar de var() */
            transition: all .3s;
        }

            .btn-edit:hover {
                transform: scale(1.1);
                background: black;
                color: white;
            }

        .back-btn2 {
            padding: 1rem;
            background: linear-gradient(90deg, #000000 0%, #373737 100%);
            box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 28px 0px, rgba(0, 0, 0, 0.1) 0px 2px 4px 0px, rgba(255, 255, 255, 0.05) 0px 0px 0px 1px inset;
            color: white;
            border-radius: 30px;
            display: flex;
            align-items: center;
            transition: all .3s;
        }

            .back-btn2::after {
                content: 'Volver';
                display: inline-block;
                color: white;
                text-decoration: none !important;
                overflow: hidden;
                opacity: 0;
                max-width: 0;
                transition: max-width 0.2s ease-in-out, opacity 0.3s ease-in-out;
                white-space: nowrap;
            }

            .back-btn2:hover::after {
                max-width: 50px;
                opacity: 1;
                margin-left: 0.5rem;
            }

        /* Estilos para el contenedor de evoluciones */
        .evolution-container {
            box-shadow: rgba(0, 0, 0, 0.2) 0px 12px 28px 0px, rgba(0, 0, 0, 0.1) 0px 2px 4px 0px, rgba(255, 255, 255, 0.05) 0px 0px 0px 1px inset;
            padding: 2rem;
            display: flex;
            flex-direction: column;
            margin-top: 2rem;
        }

        .header-evolution, .content-evolution {
            display: grid;
            grid-template-columns: 10vw 25vw;
            justify-content: center;
            align-items: center;
            align-content: center;
        }

        .content-evolution {
            margin-top: 0.5rem;
            font-weight: 600;
        }

            .content-evolution p {
                margin-bottom: 0.5rem;
            }

        /* Estilos para el mensaje de "No hay evoluciones" */
        .msg-null {
            text-align: center;
            font-size: 1.2rem;
            margin-top: 2rem;
        }

        /* Estilos para el contenedor de botones */
        .btn-container {
            width: 100%;
            display: flex;
            gap: 2rem;
            margin-top: 2rem;
            justify-content: center;
        }
    </style>
</head>
<body class="body-detail">
    <h2 class="title-detail">Detalles del paciente</h2>

    @if (Model.listaEvoluciones == null || !Model.listaEvoluciones.Any())
    {
        <p class="msg-null">Este paciente no tiene evoluciones.</p>
        <div class="btn-container">
            <a class="back-btn2" href="@Url.Action("ObtenerFichaPaciente", "HistoriaClinica", new { id = Model.IdPaciente })">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-chevrons-left">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <path d="M11 7l-5 5l5 5" />
                    <path d="M17 7l-5 5l5 5" />
                </svg>
            </a>
            @Html.ActionLink("Agregar Evolucion", "Create", "Evolucion", new { id = Model.IdPaciente }, new { @class = "btn-edit" })
        </div>
    }
    else
    {
        <div class="btn-container">
            <a class="back-btn2" href="@Url.Action("ObtenerFichaPaciente", "HistoriaClinica", new { id = Model.IdPaciente })">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-chevrons-left">
                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                    <path d="M11 7l-5 5l5 5" />
                    <path d="M17 7l-5 5l5 5" />
                </svg>
            </a>
            @Html.ActionLink("Agregar Evolucion", "Create", "Evolucion", new { id = Model.IdPaciente }, new { @class = "btn-edit" })
        </div>
        <article class="evolution-container">
            <div class="header-evolution">
                <p>Fecha</p>
                <p>Descripción de evolución</p>
            </div>
            <div class="content-evolution">
                @foreach (var item in Model.listaEvoluciones)
                {
                    <p>@Html.DisplayFor(modelItem => item.fecha)</p>
                    <p>@Html.DisplayFor(modelItem => item.DescripcionEvolucion)</p>
                }
            </div>
        </article>
    }
</body>
</html>